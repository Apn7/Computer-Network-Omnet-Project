[General]
# HTTP Request Prediction System Configurations
# Simulates web browsing with 80% predictable patterns, 20% random selection
network = http_predictive_cache.HttpNetwork
sim-time-limit = 600s  # 10 minutes simulation
repeat = 3

# Network configuration
*.numClients = 10

# Server configuration - NOW CONFIGURABLE FROM INI FILE!
# These parameters are read by HttpServer.cc from the .ned file
*.server.predictionThreshold = 0.6  # 60% probability threshold for pre-caching
*.server.cacheTTL = 5s              # Cache entry time-to-live
*.server.maxCacheSize = 20          # Maximum cached entries

# Client behavior (hardcoded in implementation)
# Clients follow: 80% predictable pattern (home→login→dashboard), 20% random
# Think time: 1-2 seconds between requests
# Automatic response time measurement

# Server behavior
# Server serves 6 web pages with 100-200ms random processing delay
# Pages: home(0), login(1), dashboard(2), profile(3), settings(4), logout(5)
# Cache hit: 10-20ms delay
# Cache miss: 100-200ms delay

#==============================================================================
# Configuration 1: Baseline - No Predictive Caching
#==============================================================================
[Config Baseline]
extends = General
description = "Baseline simulation with prediction DISABLED"

# Disable predictive caching by setting threshold above 100%
# This ensures no pages will be pre-cached (probability never exceeds 1.0)
*.server.predictionThreshold = 1.1  # Effectively disables prediction
*.server.cacheTTL = 5s              # TTL doesn't matter when prediction disabled
*.server.maxCacheSize = 20          # Cache size doesn't matter when prediction disabled

#==============================================================================
# Configuration 2: Predictive Caching - Standard Settings
#==============================================================================
[Config Predictive] 
extends = General
description = "Predictive caching with threshold=0.6, TTL=5s"

# Standard predictive caching configuration
# Uses moderate prediction threshold and short TTL for dynamic content
*.server.predictionThreshold = 0.6  # Predict when probability > 60%
*.server.cacheTTL = 5s              # Cache entries expire after 5 seconds
*.server.maxCacheSize = 20          # Maximum 20 cached pages

#==============================================================================
# Configuration 3: Parameter Sweep Analysis
#==============================================================================
[Config Sweep]
extends = General
description = "Parameter sweep: threshold={0.5,0.6,0.7}, TTL={3s,5s,10s}"

# Comprehensive parameter sweep for performance optimization
# Tests different combinations of prediction threshold and TTL values
*.server.predictionThreshold = ${threshold=0.5, 0.6, 0.7}
*.server.cacheTTL = ${ttl=3s, 5s, 10s}
*.server.maxCacheSize = 20

# This configuration will run 9 different scenarios (3 thresholds × 3 TTLs):
# 1. threshold=0.5, TTL=3s  (aggressive prediction, short cache)
# 2. threshold=0.5, TTL=5s  (aggressive prediction, medium cache) 
# 3. threshold=0.5, TTL=10s (aggressive prediction, long cache)
# 4. threshold=0.6, TTL=3s  (moderate prediction, short cache)
# 5. threshold=0.6, TTL=5s  (moderate prediction, medium cache) - DEFAULT
# 6. threshold=0.6, TTL=10s (moderate prediction, long cache)
# 7. threshold=0.7, TTL=3s  (conservative prediction, short cache)
# 8. threshold=0.7, TTL=5s  (conservative prediction, medium cache)
# 9. threshold=0.7, TTL=10s (conservative prediction, long cache)

#==============================================================================  
# Configuration 4: High Load Test
#==============================================================================
[Config HighLoad]
extends = General
description = "High load test with more clients"

*.numClients = 20
sim-time-limit = 300s  # 5 minutes with more load
*.server.predictionThreshold = 0.6
*.server.cacheTTL = 5s
*.server.maxCacheSize = 30  # Larger cache for more clients

#==============================================================================
# Configuration 5: Long Duration Test  
#==============================================================================
[Config LongTerm]
extends = General
description = "Long duration test to observe pattern stability"

sim-time-limit = 1800s  # 30 minutes
*.numClients = 15
*.server.predictionThreshold = 0.6
*.server.cacheTTL = 5s
*.server.maxCacheSize = 25

#==============================================================================
# Configuration 6: Quick Test
#==============================================================================
[Config QuickTest]
extends = General
description = "Quick test configuration for development"

sim-time-limit = 60s  # 1 minute
*.numClients = 5
*.server.predictionThreshold = 0.6
*.server.cacheTTL = 5s
*.server.maxCacheSize = 10

#==============================================================================
# Configuration 7: Aggressive Caching
#==============================================================================
[Config Aggressive]
extends = General
description = "Aggressive caching with low threshold and long TTL"

*.server.predictionThreshold = 0.4  # Pre-cache more aggressively (40% threshold)
*.server.cacheTTL = 15s             # Longer cache lifetime
*.server.maxCacheSize = 30          # Larger cache

#==============================================================================
# Configuration 8: Conservative Caching
#==============================================================================
[Config Conservative]
extends = General
description = "Conservative caching with high threshold and short TTL"

*.server.predictionThreshold = 0.8  # Only cache very likely pages (80% threshold)
*.server.cacheTTL = 3s              # Shorter cache lifetime
*.server.maxCacheSize = 10          # Smaller cache

#==============================================================================
# Legacy Configuration (Original)
#==============================================================================
[Config Standard]
extends = General
description = "Standard web browsing simulation with pattern-based navigation"

# Standard configuration with default parameters
*.server.predictionThreshold = 0.6
*.server.cacheTTL = 5s
*.server.maxCacheSize = 20

#==============================================================================
# USAGE INSTRUCTIONS
#==============================================================================
# 
# To run different configurations:
#
# 1. Run Baseline (no prediction):
#    omnetpp -u Cmdenv -c Baseline omnetpp.ini
#
# 2. Run Predictive (with prediction):
#    omnetpp -u Cmdenv -c Predictive omnetpp.ini
#
# 3. Run Parameter Sweep (all 9 combinations):
#    omnetpp -u Cmdenv -c Sweep omnetpp.ini
#
# 4. Run with GUI:
#    omnetpp -u Qtenv -c Predictive omnetpp.ini
#
# 5. Compare results:
#    - Check results/ folder for scalar files
#    - Use OMNeT++ Analysis Tool to plot:
#      * Response time: Baseline vs Predictive
#      * Cache hit rate across different configurations
#      * Time savings from caching
#
#==============================================================================
# EXPECTED OUTCOMES
#==============================================================================
#
# Baseline Configuration:
# - Cache hit rate: ~0% (prediction disabled)
# - Average response time: 100-200ms (all cache misses)
# - No time savings
#
# Predictive Configuration (threshold=0.6, TTL=5s):
# - Cache hit rate: 40-60% (for predictable patterns)
# - Average response time: 50-100ms (mix of hits and misses)
# - Time savings: 30-50% on cache hits
# - Response time reduction: ~30-50% compared to baseline
#
# Parameter Sweep:
# - Lower threshold (0.5): Higher cache hit rate, more false positives
# - Higher threshold (0.7): Lower cache hit rate, fewer false positives
# - Longer TTL (10s): Better hit rate but may serve stale content
# - Shorter TTL (3s): Lower hit rate but fresher content
#
# Best configuration depends on workload characteristics:
# - Highly predictable: threshold=0.5, TTL=10s
# - Mixed workload: threshold=0.6, TTL=5s (default)
# - Unpredictable: threshold=0.7, TTL=3s
#
#==============================================================================
